/**
 * Copyright 2025 Suleman 'sdtech' Hamisu
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.sdtech.stringextractor.core;

import java.io.File;
import java.io.IOException;
import java.io.FileOutputStream;
import com.sdtech.stringextractor.ExtractedString;

/** A class that implements the {@link ExtractedString} methods. */
public final class MainExtractedString extends ExtractedString {

    @Override
    public void writeTo(File folder, String pkgName) throws IOException {
        writeToPath(folder,pkgName);
    }
    
    
    /** create the file */
    private void writeToPath(File folder, String pkgName) throws IOException {
        String extractedString = "";
        
        extractedString += pkgName !=  "" ? "/** Generated by StringExtractor */\r\n\r\n" + pkgName + "\r\n" : "/** Generated by StringExtractor \r\n*/";
        extractedString += "\r\nimport android.content.Context;\r\n";
        extractedString += "\r\n/** A helper class for retrieving the extracted strings.*/\r\n";
        extractedString += "\r\npublic final class ExtractedString {\r\n";
        extractedString += "\r\n    /** The Context we use to retrieves the strings from xml resources. */\r\n";
        extractedString += "\r\n    private static Context mContext;\r\n";
        extractedString += "\r\n    /**";
        extractedString += "\r\n     * store our context here to retrieve the strings from every class. ";
        extractedString += "\r\n     * <p> This method need to called once from {@link Application} or {@link Activity} onCreate.";
        extractedString += "\r\n     * ";
        extractedString += "\r\n     * @param context      The {@link Context} to store.";
        extractedString += "\r\n     */";
        extractedString += "\r\n    public static void setContext(Context context){";
        extractedString += "\r\n        mContext = context;";
        extractedString += "\r\n    }\r\n";
        extractedString += "\r\n    /**";
        extractedString += "\r\n     * Retrieves our extracted string.";
        extractedString += "\r\n     * ";
        extractedString += "\r\n     * @param strResId the string id generated by StringExtractor.";
        extractedString += "\r\n     * @return the extracted string if our {@link Context} not null. \"\" otherwise.";
        extractedString += "\r\n     */";
        extractedString += "\r\n     public static String getString(int strResId) {";
        extractedString += "\r\n         if(mContext != null){";
        extractedString += "\r\n             return mContext.getResources().getString(strResId);";
        extractedString += "\r\n          }";
        extractedString += "\r\n         return \"\";";
        extractedString += "\r\n     }";
        extractedString += "\r\n}";
        // write to file
        FileOutputStream fout = new FileOutputStream(new File(folder,"ExtractedString.java"));
        fout.write(extractedString.getBytes());
        fout.close();
    }
}
